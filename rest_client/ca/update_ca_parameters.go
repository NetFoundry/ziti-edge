// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package ca

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/netfoundry/ziti-edge/models"
)

// NewUpdateCAParams creates a new UpdateCAParams object
// with the default values initialized.
func NewUpdateCAParams() *UpdateCAParams {
	var ()
	return &UpdateCAParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateCAParamsWithTimeout creates a new UpdateCAParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateCAParamsWithTimeout(timeout time.Duration) *UpdateCAParams {
	var ()
	return &UpdateCAParams{

		timeout: timeout,
	}
}

// NewUpdateCAParamsWithContext creates a new UpdateCAParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateCAParamsWithContext(ctx context.Context) *UpdateCAParams {
	var ()
	return &UpdateCAParams{

		Context: ctx,
	}
}

// NewUpdateCAParamsWithHTTPClient creates a new UpdateCAParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateCAParamsWithHTTPClient(client *http.Client) *UpdateCAParams {
	var ()
	return &UpdateCAParams{
		HTTPClient: client,
	}
}

/*UpdateCAParams contains all the parameters to send to the API endpoint
for the update CA operation typically these are written to a http.Request
*/
type UpdateCAParams struct {

	/*Body
	  A CA update object

	*/
	Body *models.CAUpdate
	/*ID
	  The id of the requested resource

	*/
	ID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update CA params
func (o *UpdateCAParams) WithTimeout(timeout time.Duration) *UpdateCAParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update CA params
func (o *UpdateCAParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update CA params
func (o *UpdateCAParams) WithContext(ctx context.Context) *UpdateCAParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update CA params
func (o *UpdateCAParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update CA params
func (o *UpdateCAParams) WithHTTPClient(client *http.Client) *UpdateCAParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update CA params
func (o *UpdateCAParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update CA params
func (o *UpdateCAParams) WithBody(body *models.CAUpdate) *UpdateCAParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update CA params
func (o *UpdateCAParams) SetBody(body *models.CAUpdate) {
	o.Body = body
}

// WithID adds the id to the update CA params
func (o *UpdateCAParams) WithID(id strfmt.UUID) *UpdateCAParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the update CA params
func (o *UpdateCAParams) SetID(id strfmt.UUID) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateCAParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
