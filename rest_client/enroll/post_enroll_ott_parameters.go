// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package enroll

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewPostEnrollOttParams creates a new PostEnrollOttParams object
// with the default values initialized.
func NewPostEnrollOttParams() *PostEnrollOttParams {
	var ()
	return &PostEnrollOttParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostEnrollOttParamsWithTimeout creates a new PostEnrollOttParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostEnrollOttParamsWithTimeout(timeout time.Duration) *PostEnrollOttParams {
	var ()
	return &PostEnrollOttParams{

		timeout: timeout,
	}
}

// NewPostEnrollOttParamsWithContext creates a new PostEnrollOttParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostEnrollOttParamsWithContext(ctx context.Context) *PostEnrollOttParams {
	var ()
	return &PostEnrollOttParams{

		Context: ctx,
	}
}

// NewPostEnrollOttParamsWithHTTPClient creates a new PostEnrollOttParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostEnrollOttParamsWithHTTPClient(client *http.Client) *PostEnrollOttParams {
	var ()
	return &PostEnrollOttParams{
		HTTPClient: client,
	}
}

/*PostEnrollOttParams contains all the parameters to send to the API endpoint
for the post enroll ott operation typically these are written to a http.Request
*/
type PostEnrollOttParams struct {

	/*Token*/
	Token strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post enroll ott params
func (o *PostEnrollOttParams) WithTimeout(timeout time.Duration) *PostEnrollOttParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post enroll ott params
func (o *PostEnrollOttParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post enroll ott params
func (o *PostEnrollOttParams) WithContext(ctx context.Context) *PostEnrollOttParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post enroll ott params
func (o *PostEnrollOttParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post enroll ott params
func (o *PostEnrollOttParams) WithHTTPClient(client *http.Client) *PostEnrollOttParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post enroll ott params
func (o *PostEnrollOttParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithToken adds the token to the post enroll ott params
func (o *PostEnrollOttParams) WithToken(token strfmt.UUID) *PostEnrollOttParams {
	o.SetToken(token)
	return o
}

// SetToken adds the token to the post enroll ott params
func (o *PostEnrollOttParams) SetToken(token strfmt.UUID) {
	o.Token = token
}

// WriteToRequest writes these params to a swagger request
func (o *PostEnrollOttParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param token
	qrToken := o.Token
	qToken := qrToken.String()
	if qToken != "" {
		if err := r.SetQueryParam("token", qToken); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
