// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CAUpdate ca update
//
// swagger:model caUpdate
type CAUpdate struct {

	// is auth enabled
	// Required: true
	IsAuthEnabled *bool `json:"isAuthEnabled"`

	// is auto Ca enrollment enabled
	// Required: true
	IsAutoCAEnrollmentEnabled *bool `json:"isAutoCaEnrollmentEnabled"`

	// is ott Ca enrollment enabled
	// Required: true
	IsOttCAEnrollmentEnabled *bool `json:"isOttCaEnrollmentEnabled"`

	// name
	// Required: true
	Name *string `json:"name"`

	// tags
	Tags Tags `json:"tags,omitempty"`
}

// Validate validates this ca update
func (m *CAUpdate) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateIsAuthEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIsAutoCAEnrollmentEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIsOttCAEnrollmentEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CAUpdate) validateIsAuthEnabled(formats strfmt.Registry) error {

	if err := validate.Required("isAuthEnabled", "body", m.IsAuthEnabled); err != nil {
		return err
	}

	return nil
}

func (m *CAUpdate) validateIsAutoCAEnrollmentEnabled(formats strfmt.Registry) error {

	if err := validate.Required("isAutoCaEnrollmentEnabled", "body", m.IsAutoCAEnrollmentEnabled); err != nil {
		return err
	}

	return nil
}

func (m *CAUpdate) validateIsOttCAEnrollmentEnabled(formats strfmt.Registry) error {

	if err := validate.Required("isOttCaEnrollmentEnabled", "body", m.IsOttCAEnrollmentEnabled); err != nil {
		return err
	}

	return nil
}

func (m *CAUpdate) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CAUpdate) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CAUpdate) UnmarshalBinary(b []byte) error {
	var res CAUpdate
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
