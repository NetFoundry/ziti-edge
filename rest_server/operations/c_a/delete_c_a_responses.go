// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package c_a

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/netfoundry/ziti-edge/models"
)

// DeleteCAOKCode is the HTTP code returned for type DeleteCAOK
const DeleteCAOKCode int = 200

/*DeleteCAOK The delete request was successful and the resource has been removed

swagger:response deleteCAOK
*/
type DeleteCAOK struct {

	/*
	  In: Body
	*/
	Payload *models.Empty `json:"body,omitempty"`
}

// NewDeleteCAOK creates DeleteCAOK with default headers values
func NewDeleteCAOK() *DeleteCAOK {

	return &DeleteCAOK{}
}

// WithPayload adds the payload to the delete c a o k response
func (o *DeleteCAOK) WithPayload(payload *models.Empty) *DeleteCAOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete c a o k response
func (o *DeleteCAOK) SetPayload(payload *models.Empty) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCAOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteCABadRequestCode is the HTTP code returned for type DeleteCABadRequest
const DeleteCABadRequestCode int = 400

/*DeleteCABadRequest The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information

swagger:response deleteCABadRequest
*/
type DeleteCABadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDeleteCABadRequest creates DeleteCABadRequest with default headers values
func NewDeleteCABadRequest() *DeleteCABadRequest {

	return &DeleteCABadRequest{}
}

// WithPayload adds the payload to the delete c a bad request response
func (o *DeleteCABadRequest) WithPayload(payload *models.APIErrorEnvelope) *DeleteCABadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete c a bad request response
func (o *DeleteCABadRequest) SetPayload(payload *models.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCABadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteCAUnauthorizedCode is the HTTP code returned for type DeleteCAUnauthorized
const DeleteCAUnauthorizedCode int = 401

/*DeleteCAUnauthorized The currently supplied session does not have the correct access rights to request this resource

swagger:response deleteCAUnauthorized
*/
type DeleteCAUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorEnvelope `json:"body,omitempty"`
}

// NewDeleteCAUnauthorized creates DeleteCAUnauthorized with default headers values
func NewDeleteCAUnauthorized() *DeleteCAUnauthorized {

	return &DeleteCAUnauthorized{}
}

// WithPayload adds the payload to the delete c a unauthorized response
func (o *DeleteCAUnauthorized) WithPayload(payload *models.APIErrorEnvelope) *DeleteCAUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete c a unauthorized response
func (o *DeleteCAUnauthorized) SetPayload(payload *models.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCAUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
