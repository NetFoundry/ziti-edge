// Code generated by go-swagger; DO NOT EDIT.

//
// Copyright NetFoundry, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// __          __              _
// \ \        / /             (_)
//  \ \  /\  / /_ _ _ __ _ __  _ _ __   __ _
//   \ \/  \/ / _` | '__| '_ \| | '_ \ / _` |
//    \  /\  / (_| | |  | | | | | | | | (_| | : This file is generated, do not edit it.
//     \/  \/ \__,_|_|  |_| |_|_|_| |_|\__, |
//                                      __/ |
//                                     |___/

package ca

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/netfoundry/ziti-edge/models"
)

// UpdateCAOKCode is the HTTP code returned for type UpdateCAOK
const UpdateCAOKCode int = 200

/*UpdateCAOK The update request was successful and the resource has been altered

swagger:response updateCaOK
*/
type UpdateCAOK struct {

	/*
	  In: Body
	*/
	Payload *models.Empty `json:"body,omitempty"`
}

// NewUpdateCAOK creates UpdateCAOK with default headers values
func NewUpdateCAOK() *UpdateCAOK {

	return &UpdateCAOK{}
}

// WithPayload adds the payload to the update Ca o k response
func (o *UpdateCAOK) WithPayload(payload *models.Empty) *UpdateCAOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update Ca o k response
func (o *UpdateCAOK) SetPayload(payload *models.Empty) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCAOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCABadRequestCode is the HTTP code returned for type UpdateCABadRequest
const UpdateCABadRequestCode int = 400

/*UpdateCABadRequest The supplied request contains invalid fields or could not be parsed (json and non-json bodies). The error's code, message, and cause fields can be inspected for further information

swagger:response updateCaBadRequest
*/
type UpdateCABadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateCABadRequest creates UpdateCABadRequest with default headers values
func NewUpdateCABadRequest() *UpdateCABadRequest {

	return &UpdateCABadRequest{}
}

// WithPayload adds the payload to the update Ca bad request response
func (o *UpdateCABadRequest) WithPayload(payload *models.APIErrorEnvelope) *UpdateCABadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update Ca bad request response
func (o *UpdateCABadRequest) SetPayload(payload *models.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCABadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCAUnauthorizedCode is the HTTP code returned for type UpdateCAUnauthorized
const UpdateCAUnauthorizedCode int = 401

/*UpdateCAUnauthorized The currently supplied session does not have the correct access rights to request this resource

swagger:response updateCaUnauthorized
*/
type UpdateCAUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateCAUnauthorized creates UpdateCAUnauthorized with default headers values
func NewUpdateCAUnauthorized() *UpdateCAUnauthorized {

	return &UpdateCAUnauthorized{}
}

// WithPayload adds the payload to the update Ca unauthorized response
func (o *UpdateCAUnauthorized) WithPayload(payload *models.APIErrorEnvelope) *UpdateCAUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update Ca unauthorized response
func (o *UpdateCAUnauthorized) SetPayload(payload *models.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCAUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCANotFoundCode is the HTTP code returned for type UpdateCANotFound
const UpdateCANotFoundCode int = 404

/*UpdateCANotFound The requested resource does not exist

swagger:response updateCaNotFound
*/
type UpdateCANotFound struct {

	/*
	  In: Body
	*/
	Payload *models.APIErrorEnvelope `json:"body,omitempty"`
}

// NewUpdateCANotFound creates UpdateCANotFound with default headers values
func NewUpdateCANotFound() *UpdateCANotFound {

	return &UpdateCANotFound{}
}

// WithPayload adds the payload to the update Ca not found response
func (o *UpdateCANotFound) WithPayload(payload *models.APIErrorEnvelope) *UpdateCANotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update Ca not found response
func (o *UpdateCANotFound) SetPayload(payload *models.APIErrorEnvelope) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCANotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
